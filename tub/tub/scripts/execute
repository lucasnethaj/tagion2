#!/usr/bin/env bash

while [[ $(pwd) != / ]]; do
    ROOT=$(find "$(pwd)"/ -maxdepth 1 -name ".root")

    if [[ -z "$ROOT" ]]; then
        cd ..
    else
        ORIGIN_PATH=$(pwd)
        break
    fi
done

if [[ -z "$ORIGIN_PATH" ]]; then
    echo "No .root found in parent directories."
    echo "Make sure you have .root file in the root of your project."
    exit
fi

C=''
for i in "${@:2}"; do
    i="${i//\\/\\\\}"
    C="$C \"${i//\"/\\\"}\""
done

if [[ -z "$C" ]]; then
    C='status -s && echo "Branch: $(git rev-parse --abbrev-ref HEAD)"'
fi

function show_output() {
    echo -e "\033[1m$DIR\033[0m"
    bash -c "git $C"
}

function show_output_sum() {
    OUTPUT=$(bash -c "git $C")
    echo -e "$OUTPUT \033[1m$DIR\033[0m"
}

SUBMODULES=$(git config --file .gitmodules --get-regexp path | awk '{ print $2 }')

for DIR in $SUBMODULES; do
    cd "$ORIGIN_PATH/$DIR/"

    if [[ "$1" == "all" ]]; then
        show_output
    elif [[ "$1" == "sum" ]]; then
        show_output_sum
    else
        if [[ $(git diff --stat) != '' ]]; then
            show_output
        fi
    fi

done
