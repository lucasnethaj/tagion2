name: Makefile CI
on:
  pull_request:
    branches: [ "develop" ]
  push: 
    branches: [ "develop" ]
env:
  ## Sets environment variable
  TARGET_BUILD: x86_64-linux
  PARALEL: 4
jobs:
  build_and_unittest:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run unittests
        run: |
          source ~/.bashrc
          make unittest
      - name: Build
        run: |
          source ~/.bashrc
          make bins -j ${{ env.PARALEL }}
          
      - name: Upload bins
        uses: actions/upload-artifact@v3
        with:
          name: core-bins
          path: build/${{ env.TARGET_BUILD }}/bin/tagion


      - name: Upload unittest result
        uses: actions/upload-artifact@v3
        with:
          name: core-unittests-logs
          path: logs/${{ env.TARGET_BUILD }}/unittest.log

      - name: Check unittests
        run: tail -n 5 logs/${{ env.TARGET_BUILD }}/unittest.log | head -n 1 | grep passed

  create_tagion_images:
    runs-on: self-hosted
    needs: build_and_unittest
    steps:
      - name: Cleanup
        run: rm -rf * ; ls; pwd;

      - name: Download Docker context
        uses: actions/checkout@v3
        with:
          repository: tagion/tagion-docker
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT

      - name: Download bins
        uses: actions/download-artifact@v3
        with:
          name: core-bins
          path: bins
 
      - name: Download QA tools
        uses: actions/checkout@v3
        with:
          repository: tagion/qa-framework
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
          path: qa-tools

      - name: Debug info
        run: ls; echo ===========; ls bins; echo ===========; ls qa-tools; pwd;

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build tagion img
        run: docker build -t tagion/toolkit:$GITHUB_SHA . --target tagion
      - name: Build tagion-qa img
        run: docker build -t tagion/qa-toolkit:$GITHUB_SHA . --target tagion-qa

      - name: Push tagion img
        run: docker image push tagion/toolkit:$GITHUB_SHA
      - name: Push tagion-qa img
        run: docker image push tagion/qa-toolkit:$GITHUB_SHA

      
      
      # - name: Build and push tagion
      #   uses: docker/build-push-action@v3
      #   with:
      #     push: true
      #     tags: tagion/toolkit:${{ github.sha }}
      #     target: tagion
      # - name: Build and push tagion-qa
      #   uses: docker/build-push-action@v3
      #   with:
      #     push: true
      #     tags: tagion/qa-toolkit:${{ github.sha }}
      #     target: tagion-qa
      
        
  
