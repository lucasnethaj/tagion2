name: Commit Build and Test
on:
  workflow_dispatch:
  push: 
    branches: 
      - current
env:
  TARGET: x86_64-linux
  STAGE: commit
  DC: dmd
  PARALLEL: 2
  RETENTION_DAYS_BINS: 3

jobs:
  build_and_test:
    runs-on: phillip
    steps:
      - name: pull
        run: |
          git checkout current
          git pull
          git pull 
# make it work with recursive submodules

      - name: Run tests
        run: |
          make test -j ${{env.PARALLEL}} DC=${{env.DC}} || make proper test -j ${{env.PARALLEL}} DC=${{env.DC}}
          
      - name: Report unittests
        run: |
          RESULT=$(cat logs/${{ env.TARGET }}/unittest.log | grep -E "^[0-9]+ modules passed unittests")
          echo -e "### :heavy_check_mark: Unittests passed \n $RESULT" >> $GITHUB_STEP_SUMMARY

      - name: Report bddtests
        run: | 
          RESULT=$(./build/${{ env.TARGET }}/bin/collider -c logs/${{ env.TARGET }}/bdd/${{ env.STAGE }}/results)
          echo $RESULT | grep "Test result success!"
          echo -e "\n $RESULT" >> $GITHUB_STEP_SUMMARY

      - name: Create tar ball
        id: create_tar
        run: |
          commit_hash=$(git rev-parse HEAD)
          timestamp=$(date +%M-%H-%d-%m-%y)
          tar_filename="${commit_hash}-${timestamp}.tar.gz"
          tar -czf ../${tar_filename} --exclude='*.o' logs/ build/
          echo -e "\nRelease candidate is: $tar_filename" >> $GITHUB_STEP_SUMMARY
          echo "tar_filename=$tar_filename" >> $GITHUB_OUTPUT


      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: failed-run
          path: ${{steps.create_tar.outputs.tar_filename}}
      
      - name: Start next workflow
        if: success()
        run: gh workflow run acceptance.yml -f tarball=${{ steps.create_tar.outputs.tar_filename }}
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
 
