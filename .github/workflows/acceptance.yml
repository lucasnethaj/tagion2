name: Acceptance tests
on:
  workflow_dispatch:
    inputs:
      tarball: 
        description: "tar ball of the logs and build"
        required: true
        type: string
      stage:
        description: "the stage that the log should be taken from"
        required: true
        type: string
env:
  TARGET: x86_64-linux
  RETENTION_DAYS_BINS: 3

jobs:
  run_acceptance_stage_tests:
    runs-on: CD
    steps:
      - name: Copy Artifact to local machine
        run: |
          rm -rf *
          cp /mnt/shared/${{inputs.stage}}/${{inputs.tarball}} .
          tar -xzf ${{inputs.tarball}}
        
      - name: Run collider tests
        run: |
          source $PWD/build/${{ env.TARGET }}/bin/bddenv.sh
          export DBIN=$PWD/build/${{ env.TARGET }}/bin
          export DLOG=$PWD/logs/${{ env.TARGET }}
          export COLLIDER_ROOT=$PWD/logs/${{ env.TARGET }}/bdd
          export PATH=$DBIN:$PATH
          ./build/${{ env.TARGET }}/bin/collider -r ${{ inputs.stage }} -j 2 -b build/${{ env.TARGET}}/bin/testbench -s build/${{ env.TARGET }}/bin/schedule.json  

      - name: Create tar ball
        run: tar -czf ${{inputs.tarball}} --exclude='*.o' logs/ build/ 
        
      - uses: actions/upload-artifact@v3
        if: failure() 
        with:
          name: failed-run
          path: ./${{inputs.tarball}}
      
      - name: Upload to shared directory
        if: success()
        run: |
          folder=/mnt/shared/${{env.STAGE}}
          mkdir -p $folder
          cp ${{inputs.tarball}} $folder

      - name: Start next workflow
        if: success()
        run: |
          git init
          gh workflow run finish.yml -f tarball=${{ inputs.tarball }} -f stage=${{ env.STAGE }}
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Cleanup
        if: success() || failure()
        run: |
          rm ${{ inputs.tarball }}
          rm -rf *



      

      # Additional steps here

