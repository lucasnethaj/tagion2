@startuml

interface HashChainBlock {
    + Buffer getHash() const = 0
    + Buffer getPrevious() const = 0

    + HiBON toHiBON() // from HiBONRecord
}

class RecorderChainBlock {
    + Buffer fingerprint
    + Buffer bullseye
    + Buffer previous
    + Document recorder_doc

    mixin HiBONRecord

    + this(Document recorder_doc, Buffer bullseye, Buffer previous, HashNet)

    + override Buffer getHash() const
    + override Buffer getPrevious() const
}

HashChainBlock <|.. RecorderChainBlock

class EpochChainBlock {
    ...

    mixin HiBONRecord

    + override Buffer getHash() const
    + override Buffer getPrevious() const
}

HashChainBlock <|.. EpochChainBlock

class "HashChain(Block : HashChainBlock)" as HashChain {
    # HashChainStorage
    # Block _last_block;

    + this(string folder_path, const HashNet net)

    + const(Block) getLastBlock()
    + void append(Block block)

    + bool isValidChain()

    + replay((ChainBlock) => void)
    + replayFrom((ChainBlock) => bool, (ChainBlock) => void)
}

HashChainBlock *- HashChain : handles & stores
HashChain -* HashChainStorage

interface HashChainStorage {
    + void write(Block block)
    + Block read(Buffer fingerprint)

    + Block find(Predicate)

    + string[] getHashes()
}

class HashChainFileStorage {
    # folder_path
    # HashNet

    + void write(Block block)
    + Block read(Buffer fingerprint)

    + Block find(Predicate)

    + string[] getHashes()
}

HashChainStorage <|.. HashChainFileStorage

@enduml
