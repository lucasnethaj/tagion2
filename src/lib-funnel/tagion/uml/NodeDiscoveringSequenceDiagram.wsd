@startuml Node Discovering Sequence

skinparam Style strictuml
skinparam SequenceMessageAlign center
hide empty description
title Node Discovering Sequence Diagram

participant Node as node
database DB as db
participant NextActiveNode as cnode
database "NextActiveNode's DB" as cdb

node -> db : Init with initial list of nodes
|||
node -> db : Request latest epoch: **E_loc**
db --> node : **E_loc**

note right of node
    **last_epoch_updated** = true
end note
group updating according to last epoch [repeat while **last_epoch_updated** == true]
node -> db : Request list of nodes: **E_loc_nodes[]**
db --> node : **E_loc_nodes[]**

note right of node
    **last_epoch_updated** = false
end note

group checking next active node [repeat while exists unvisited node in **E_loc_nodes**]
    node -> cnode : Request node's last epoch: **E_node**
    activate cnode
    activate cdb
    cnode -> cdb : Request last epoch: **E_node**
    cdb --> cnode : **E_node**
    cnode --> node : **E_node**

    alt **E_node** > **E_loc**
        node -> cnode : Go to **E_loc** epoch in DB
        loop while not reach **E_loc**
            cnode -> cdb : Get previous epoch
            cdb --> cnode : Previous epoch
        end
        cnode --> node
        
        note right of node
            **E_trust** = **E_loc**
        end note

        loop **E_trust** is not the last in epoch chain
            note left of cnode
                **E_ver** = **E_trust** + 1
            end note
            node -> cnode : Verify **E_ver** epoch
            cnode -> cdb : Request **E_ver** signature
            cdb --> cnode : **E_ver** signature
            cnode --> node : **E_ver** signature
            node -> node : Verify signature

            alt signature verified
                note left of cnode
                    **E_trust** = **E_ver**
                end note
                node -> cnode : Request **E_trust** epoch data
                cnode -> cdb : Request **E_trust** epoch data
                cdb --> cnode : **E_trust** epoch
                deactivate cdb
                cnode --> node : **E_trust** epoch
                node -> db : Replay **E_trust** epoch

                note right of node
                    **last_epoch_updated** = true
                end note

            else not verified
                note left of cnode
                    End working with this node
                end note
                deactivate cnode
            end
        end

    else else
        note left of cnode
            Skip this node
        end note
        deactivate cdb
        deactivate cnode
    end
end
end
@enduml