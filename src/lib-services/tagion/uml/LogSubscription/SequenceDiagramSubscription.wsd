@startuml Logger Subscription Sequence

skinparam Style strictuml
skinparam SequenceMessageAlign center
hide empty description
title Subscription to logs Sequence Diagram

participant Subscriber as sub
participant LogSubscriptionService as subservice
participant LoggerService as logservice

note right of sub #FFFFFF
    Single **LogFilter** is a data structure that contains:
    # **task name** - name of process, which subscriber wants to listen;
    # **log level** - bitmask that contains types of logs to listen (INFO, WARNING, ERROR, etc...).
end note

activate sub
activate subservice
activate logservice

sub -> subservice : Send list of **LogFilters**
subservice -> subservice : Save network data of Subscriber\nand list of given filters
subservice -> subservice : Generate common list of **LogFilters** \nfrom all connected subscribers 
subservice -> logservice : Send common list of **LogFilters**
logservice -> logservice : Save common list of filters

subservice --> sub : Success

deactivate sub
deactivate subservice
deactivate logservice

@enduml